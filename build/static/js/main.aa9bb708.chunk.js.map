{"version":3,"sources":["actions/constants.js","components/Header/Header.jsx","actions/auth.actions.js","components/Layout/Layout.jsx","containers/HomePage/HomePage.js","actions/user.actions.js","containers/LoginPage/LoginPage.js","containers/RegisterPage/RegisterPage.js","components/PrivateRoute.jsx","containers/ProfilePage/ProfilePage.js","containers/UpdatePassword/UpdatePassword.js","containers/UpdateEmail/UpdateEmail.js","containers/UpdateName/UpdateName.js","App.js","serviceWorker.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/index.js","store/Store.js","index.js"],"names":["authConstanst","userConstants","Header","props","auth","useSelector","state","dispatch","useDispatch","className","style","display","to","authenticated","color","fontWeight","firstName","lastName","onClick","uid","a","type","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","console","log","payload","Layout","children","User","user","src","image","alt","flex","justifyContent","margin","HomePage","unsubscribe","useState","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","useEffect","db","onSnapshot","querySnapshot","users","forEach","data","push","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","getRealtimeConversations","submitMessage","msgObj","conversationObj","set","isView","createdAt","Date","id","updateMessage","length","map","key","con","textAlign","background","maxWidth","position","conversationid","delete","value","onKeyPress","event","onChange","e","target","placeholder","LoginPage","email","setEmail","password","setPassword","onSubmit","preventDefault","signInWithEmailAndPassword","name","displayName","split","loggedInUser","setItem","JSON","stringify","alert","RegisterPage","setFirstName","setLastName","createUserWithEmailAndPassword","currentUser","updateProfile","signup","PrivateRoute","Component","component","rest","getItem","parse","ProfilePage","file","setFile","width","height","files","storage","ref","put","on","child","getDownloadURL","url","handleUpload","UpdatePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","cpass","npass","cred","firebase","EmailAuthProvider","credential","reauthenticateWithCredential","updatePassword","window","location","reload","updatePasswordError","userReauthenticationError","UpdateEmail","newEmail","setNewEmail","updateEmail","updateError","authenticationerror","updateUserEmail","UpdateName","firstname","lastname","fname","lname","names","href","updateDbError","updateDisplaynameError","App","path","exact","Boolean","hostname","match","initState","authenticating","intiState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa9bb708.chunk.js","sourcesContent":["export const authConstanst = {\r\n    USER_LOGIN: 'USER_LOGIN',\r\n    USER_LOGOUT: 'USER_LOGOUT'\r\n}\r\n\r\nexport const userConstants = {\r\n    GET_REALTIME_USERS: 'GET_REALTIME_USERS',\r\n    GET_REALTIME_MESSAGES: 'GET_REALTIME_MESSAGES'\r\n}","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './header.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../actions';\r\n\r\n/**\r\n* @author\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  return(\r\n    <header className=\"header\">\r\n        <div style={{display: 'flex'}}>\r\n          <Link to={'/'}>\r\n            <div className=\"logo\">Web Messenger</div>\r\n          </Link>\r\n            \r\n            {\r\n              !auth.authenticated ? \r\n              <ul className=\"leftMenu\">\r\n                <li><NavLink to={'/login'}>Login</NavLink></li>\r\n                <li><NavLink to={'/signup'}>Sign up</NavLink></li>\r\n              </ul> : null\r\n            }\r\n  \r\n        </div>\r\n        <Link to=\"/profile\">\r\n            <div style={{ color: '#fff', fontWeight: 'bold'}} className=\"userName\">\r\n              {auth.authenticated ? `${auth.firstName} ${auth.lastName}` : ''}\r\n            </div>\r\n          </Link>\r\n          <ul className=\"menu\">\r\n\r\n            {\r\n              auth.authenticated ?\r\n              <li>\r\n                <Link to={'#'} onClick={() => {\r\n                  dispatch(logout(auth.uid))\r\n                }}>Logout</Link>\r\n            </li> : null\r\n            }\r\n        </ul>\r\n    </header>\r\n   )\r\n }\r\n\r\nexport default Header","import { auth, firestore } from 'firebase';\r\nimport { authConstanst } from './constants';\r\n\r\n// Register a user (signup because its a reserved word in firebase)\r\n\r\nexport const signup = (user) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const db = firestore();\r\n\r\n        dispatch({type: `${authConstanst.USER_LOGIN}_REQUEST`});\r\n\r\n        auth()\r\n        .createUserWithEmailAndPassword(user.email, user.password)\r\n        .then(data => {\r\n            console.log(data);\r\n            const currentUser = auth().currentUser;\r\n            const name = `${user.firstName} ${user.lastName}`;\r\n            currentUser.updateProfile({\r\n                displayName: name\r\n            })\r\n            .then(() => {\r\n                //if you are here, it means its updated successfully\r\n                db.collection('users')\r\n                .doc(data.user.uid)\r\n                .set({\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    uid: data.user.uid,\r\n                    image: '',\r\n                    createdAt: new Date(),\r\n                    isOnline: true\r\n                })\r\n                .then(() => {\r\n                    //successful creation of user\r\n                    const loggedInUser = {\r\n                        firstName: user.firstName,\r\n                        lastName: user.lastName,\r\n                        uid: data.user.uid,\r\n                        email: user.email\r\n                    }\r\n                    localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n                    console.log('User logged in successfully...!');\r\n                    dispatch({\r\n                        type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                        payload: { user: loggedInUser }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    dispatch({ \r\n                        type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                        payload: { error }\r\n                      });\r\n                });\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\n// Login\r\n\r\nexport const signin = (user) => {\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: `${authConstanst.USER_LOGIN}_REQUEST` });\r\n        auth()\r\n        .signInWithEmailAndPassword(user.email, user.password)\r\n        .then((data) => {\r\n            console.log(data);\r\n\r\n            const db = firestore();\r\n            db.collection('users')\r\n            .doc(data.user.uid)\r\n            .update({\r\n                isOnline: true\r\n            })\r\n            .then(() => {\r\n                const name = data.user.displayName.split(\" \");\r\n                const firstName = name[0];\r\n                const lastName = name[1];\r\n\r\n                const loggedInUser = {\r\n                    firstName,\r\n                    lastName,\r\n                    uid: data.user.uid,\r\n                    email: data.user.email\r\n                }\r\n\r\n                localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n\r\n                dispatch({\r\n                    type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                    payload: { user: loggedInUser }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                payload: { error }\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const isLoggedInUser = () => {\r\n    return async dispatch => {\r\n\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\n        if(user){\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                payload: { user }\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                payload: { error: 'Login again please' }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (uid) => {\r\n    return async dispatch => {\r\n        dispatch({ type: `${authConstanst.USER_LOGOUT}_REQUEST` });\r\n        //Now lets logout user\r\n\r\n        const db = firestore();\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .update({\r\n            isOnline: false\r\n        })\r\n        .then(() => {\r\n            auth()\r\n            .signOut()\r\n            .then(() => {\r\n                //successfully\r\n                localStorage.clear();\r\n                dispatch({type: `${authConstanst.USER_LOGOUT}_SUCCESS`});\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                dispatch({ type: `${authConstanst.USER_LOGOUT}_FAILURE`, payload: { error } })\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error); \r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport Header from '../Header/Header';\r\n\r\n/**\r\n* @author\r\n* @function Layout\r\n**/\r\n\r\nconst Layout = (props) => {\r\n  return(\r\n    <div>\r\n        <Header />\r\n        {props.children}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Layout","import React, { useEffect, useState } from 'react';\r\nimport './homepage.css';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRealtimeUsers, updateMessage, getRealtimeConversations, deleteMessage } from '../../actions';\r\n\r\nconst User = (props) => {\r\n\r\n  const {user, onClick} = props;\r\n\r\n  return (\r\n    <div onClick={() => onClick(user)} className=\"displayName\">\r\n      <div className=\"displayPic\">\r\n        <img src={user.image? user.image : 'https://genslerzudansdentistry.com/wp-content/uploads/2015/11/anonymous-user.png'} alt=\"\" />\r\n      </div>\r\n      <div style={{ display: 'flex', flex: 1, justifyContent: 'space-between', margin: '25px 40px'}}>\r\n         <span style={{fontWeight: 600}}>{user.firstName} {user.lastName}</span>\r\n        <span className={user.isOnline ? `onlineStatus` : `onlineStatus off`}></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst HomePage = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const user = useSelector(state => state.user);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [chatUser, setChatUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [userUid, setUserUid] = useState(null);\r\n  let unsubscribe;\r\n\r\n  useEffect(() => {\r\n\r\n    unsubscribe = dispatch(getRealtimeUsers(auth.uid))\r\n    .then(unsubscribe => {\r\n      return unsubscribe;\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      //cleanup\r\n      unsubscribe.then(f => f()).catch(error => console.log(error));\r\n    }\r\n  });\r\n\r\n  const initChat = (user) => {\r\n\r\n    setChatStarted(true)\r\n    setChatUser(`${user.firstName} ${user.lastName}`)\r\n    setUserUid(user.uid);\r\n\r\n    console.log(user);  \r\n\r\n    dispatch(getRealtimeConversations({ uid_1: auth.uid, uid_2: user.uid }));\r\n  }\r\n\r\n  const submitMessage = () => {\r\n\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message\r\n    }\r\n\r\n    if(message !== \"\"){\r\n      dispatch(updateMessage(msgObj))\r\n      .then(() => {\r\n        setMessage('')\r\n      });\r\n    }\r\n    console.log(msgObj);\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <section className=\"chatCointainer\">\r\n        <div className=\"listOfUsers\">\r\n          {\r\n            user.users.length > 0 ?\r\n            user.users.map(user => {\r\n              return (\r\n                <div className=\"singleUserElement\">\r\n                  <User \r\n                  onClick={initChat}\r\n                  key={user.uid} \r\n                  user={user} \r\n                  />\r\n                </div>\r\n              );\r\n            }) : null\r\n          }\r\n        </div>\r\n        <div className=\"chatArea\">\r\n            \r\n            <div className=\"chatHeader\">\r\n            {\r\n              chatStarted ? chatUser : ''\r\n            }\r\n            </div>\r\n            <div className=\"messageSections\">\r\n                {\r\n                  chatStarted ? \r\n                  user.conversations.map(con =>\r\n                    <div style={{ textAlign: con.user_uid_1 === auth.uid ? 'right' : 'left'}}>\r\n                      <div className=\"messageContent\">\r\n                        <div className = \"message\">\r\n                          <p className=\"messageStyle\" style={{ \r\n                              background: con.user_uid_1 === auth.uid ? \"#b9defc\" : \"#59b1fc\", textAlign: \"center\", maxWidth:\"500px\", position: \"relative\"\r\n                            }}>{con.message}</p>\r\n                            {con.user_uid_1 === auth.uid ? <input type=\"image\" onClick={deleteMessage(con.id)} className=\"deleteMessageBtn\" src=\"https://static.thenounproject.com/png/1290073-200.png\" alt=\"\" /> : null }\r\n                        </div>\r\n                      </div>\r\n                  </div>)\r\n                  : null\r\n                }\r\n            </div>\r\n            {\r\n              chatStarted ? \r\n              <div className=\"chatControls\">\r\n                <input type=\"button\" value=\"Send\" className=\"sendMessageBtn\" onClick={submitMessage}/>\r\n                <input type=\"text\" \r\n                  className=\"sendMessageInput\"\r\n                  value={message}\r\n                  onKeyPress={(event) => {\r\n                    if(event.key === 'Enter') {\r\n                      submitMessage();\r\n                    }\r\n                  }}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  placeholder=\"Send a Message\"\r\n                />\r\n            </div> : null\r\n            }\r\n        </div>\r\n    </section>\r\n  </Layout>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import { authConstanst, userConstants } from \"./constants\";\r\nimport firebase, { auth, firestore } from 'firebase';\r\nimport { storage } from '../index';\r\n\r\nexport const getRealtimeUsers = (uid) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n\r\n        const db = firestore();\r\n        const unsubscribe = db.collection(\"users\")\r\n        .onSnapshot((querySnapshot) => {\r\n            const users = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid !== uid){\r\n                    users.push(doc.data());\r\n                }\r\n            });\r\n            dispatch({ \r\n                type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n                payload: { users }\r\n            });\r\n        });\r\n        return unsubscribe;\r\n    }\r\n}\r\n\r\nexport const updateMessage = (msgObj) => {\r\n    return async()=> {\r\n        \r\n        const db = firestore();\r\n        var conversationObj = db.collection('conversations').doc();\r\n\r\n        conversationObj.set({\r\n            ...msgObj,\r\n            isView: false,\r\n            createdAt: new Date(),\r\n            id: conversationObj.id\r\n        })\r\n        .then((data) => {\r\n            console.log(data)   \r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n}\r\n\r\nexport const getRealtimeConversations = (user) => {\r\n    return async dispatch => {\r\n\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n        .where('user_uid_1', 'in', [user.uid_1, user.uid_2])\r\n        .orderBy('createdAt', 'asc')\r\n        .onSnapshot((querySnapshot) => {\r\n\r\n            const conversations = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n\r\n                if(\r\n                    (doc.data().user_uid_1 === user.uid_1 && doc.data().user_uid_2 === user.uid_2)\r\n                    || \r\n                    (doc.data().user_uid_1 === user.uid_2 && doc.data().user_uid_2 === user.uid_1)\r\n                ){\r\n                    conversations.push(doc.data())\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: userConstants.GET_REALTIME_MESSAGES,\r\n                payload: { conversations }\r\n            })\r\n\r\n            console.log(\"all messages:\",conversations);\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteMessage = (conversationid) => {\r\n\r\n    return async() => {\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n        .doc(conversationid)\r\n        .delete()\r\n        .then(()=>{\r\n            console.log('Message deleted successfully!');\r\n        }).catch(()=>{\r\n            console.error('Error deleting the message.')\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateConversation = (uid, newMessage) => {\r\n    return async() => {\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n        .doc(uid)\r\n        .update({\r\n            message: newMessage\r\n        })\r\n        .then(()=>{\r\n            console.log('Updated');\r\n        }).catch((error)=>{\r\n            console.log('Couldnt update message. Error: '+error);\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async dispatch => {\r\n        dispatch({type: `${authConstanst.USER_LOGIN}_REQUEST`});\r\n        auth()\r\n        .signInWithEmailAndPassword(user.email, user.password)\r\n        .then((data)=>{\r\n            const db = firestore();\r\n            db.collection('users')\r\n            .doc(data.user.uid)\r\n            .update({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName\r\n            })\r\n        }).catch((error)=>{\r\n            console.log(\"Couldn't update user. Error: \", error)\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserPassword = (cpass, npass) => {\r\n    return async()=>{\r\n        try{\r\n            var user = auth().currentUser;\r\n            const cred = firebase.auth.EmailAuthProvider.credential(user.email, cpass);\r\n            user.reauthenticateWithCredential(cred)\r\n            .then(()=>{\r\n                var user = firebase.auth().currentUser;\r\n                user.updatePassword(npass)\r\n                .then(()=>{\r\n                    console.log('Password updated!');\r\n                    localStorage.clear();\r\n                    window.location.reload();\r\n                })\r\n                .catch((updatePasswordError)=>{\r\n                    console.log('Couldnt update password. Try again. Error: ', updatePasswordError);\r\n                })\r\n            })\r\n            .catch((userReauthenticationError)=>{\r\n                console.log('Couldnt re-authenticate user. Error: ', userReauthenticationError);\r\n            });\r\n        }   \r\n        catch(error){\r\n            console.log('Wrong password! Error: ', error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUserEmail = (cpass, email) => {\r\n    return async()=>{\r\n        try{\r\n            var user = auth().currentUser;\r\n            const cred = firebase.auth.EmailAuthProvider.credential(user.email, cpass);\r\n            user.reauthenticateWithCredential(cred)\r\n            .then(()=>{\r\n                user.updateEmail(email)\r\n                .then(()=>{\r\n                    console.log('Email updated to '+email+'.');\r\n                    localStorage.clear();\r\n                    window.location.reload();\r\n                })\r\n                .catch((updateError)=>{\r\n                console.log('Couldnt update email. Error: ', updateError)\r\n                })\r\n            })\r\n            .catch((authenticationerror)=>{\r\n                console.log('Couldnt reauthenticate user. Error: ', authenticationerror)\r\n            })\r\n        }\r\n        catch(error){\r\n            console.log('Wrong password! Error: ', error)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const updateDisplayName = (uid, fname, lname) => {\r\n    return async()=>{\r\n        var user = auth().currentUser;\r\n        var names = [];\r\n        if(fname === ''){\r\n            names = user.displayName.split(\" \");\r\n            fname = names[0];\r\n        }\r\n        if(lname === ''){\r\n            names = user.displayName.split(\" \");\r\n            lname = names[1]\r\n        }\r\n        user.updateProfile({\r\n            displayName: fname + \" \" +lname\r\n        })\r\n        .then(()=>{\r\n            const db = firestore();\r\n            db.collection('users')\r\n            .doc(uid)\r\n            .update({\r\n                firstName: fname,\r\n                lastName: lname\r\n            })\r\n            .then(()=>{\r\n                localStorage.clear();\r\n                window.location.href=\"#\";\r\n                 window.location.reload();\r\n\r\n            })\r\n            .catch((updateDbError)=>{\r\n                console.log('Couldnt save data to DB. Error: ', updateDbError)\r\n            })\r\n        })\r\n        .catch((updateDisplaynameError)=>{\r\n            console.log('Couldnt update displayname. Error: ', updateDisplaynameError)\r\n        })\r\n    }\r\n}\r\n\r\nexport const handleUpload = (uid, file) => {\r\n    return async()=>{\r\n        const uploadTask = storage.ref(`images/${uid}/profile`).put(file);\r\n        uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n          storage\r\n            .ref(`images/${uid}`)\r\n            .child(\"profile\")\r\n            .getDownloadURL()\r\n            .then(url => {\r\n                var user = auth().currentUser;\r\n                const db = firestore();\r\n                db.collection('users').doc(uid).update({\r\n                    image: url\r\n                })\r\n                user.image = url;\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUserImage = (uid) =>{\r\n    const uploadTask = storage.ref(`images/${uid}/profile`);\r\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        storage\r\n        .ref(`images/${uid}`)\r\n        .child(\"profile\")\r\n        .getDownloadURL()\r\n        .then((url)=>{\r\n            return url;\r\n        })\r\n    })\r\n}","import React, { useState } from 'react'\r\nimport Layout from '../../components/Layout/Layout';\r\nimport { signin } from '../../actions';\r\nimport './loginpage.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function LoginPage\r\n**/\r\n\r\nconst LoginPage = () => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(email === \"\"){\r\n      alert(\"Email is required\");\r\n      return;\r\n    }\r\n    if(password === \"\"){\r\n      alert(\"Password is required\");\r\n      return;\r\n    }\r\n\r\n    dispatch(signin({ email, password }));\r\n  }\r\n\r\n  if(auth.authenticated){\r\n    return <Redirect to={`/`} />\r\n  }\r\n  return(\r\n    <Layout>\r\n      <div className=\"loginContainer\">\r\n        <form onSubmit={userLogin}>\r\n                <h3>Sign in</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input name=\"email\" type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input name=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Log In</button>\r\n            </form>\r\n      </div>\r\n    </Layout>\r\n   )\r\n }\r\n\r\nexport default LoginPage","import React, { useState } from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport { signup } from '../../actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './registerpage.css';\r\n\r\n\r\n/**\r\n* @author\r\n* @function RegisterPage\r\n**/\r\n\r\nconst RegisterPage = () => {\r\n\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n\r\n  const registerUser = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      firstName, lastName, email, password\r\n    }\r\n    \r\n    dispatch(signup(user))\r\n  }\r\n\r\n  if(auth.authenticated){\r\n    return <Redirect to={`/`} />\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <div className=\"registerContainer\">\r\n        <form onSubmit={registerUser}>\r\n                <h3>Sign Up</h3>\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input name=\"firstName\" value={firstName} onChange={(e) => setFirstName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"First name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input name=\"lastName\" value={lastName} onChange={(e) => setLastName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\r\n            </form>\r\n      </div>\r\n    </Layout>\r\n   )\r\n }\r\n\r\nexport default RegisterPage","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function PrivateRoute\r\n**/\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n  return(\r\n    <Route {...rest} component={(props) => {\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\n        if(user){\r\n            return <Component {...props} />\r\n        }else{\r\n            return <Redirect to={`/login`} />\r\n        }\r\n    }} />\r\n   )\r\n }\r\n\r\nexport default PrivateRoute","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './profilepage.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from \"../../components/Layout/Layout.jsx\"\r\nimport { handleUpload } from '../../actions/user.actions';\r\n\r\nconst ProfilePage = () => {\r\n    const auth = useSelector(state => state.auth);\r\n    const [file, setFile] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploadPic =(e) =>{\r\n        e.preventDefault();\r\n        dispatch(handleUpload(auth.uid, file));\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"page-content page-container\" id=\"page-content\">\r\n                <div className=\"padding\">\r\n                    <div className=\"row container d-flex justify-content-center\">\r\n                        <div className=\"col-xl-6 col-md-12\">\r\n                    <div className=\"card user-card-full\">\r\n                        <div className=\"row m-l-0 m-r-0\">\r\n                            <div className=\"col-sm-4 bg-c-lite-green user-profile\">\r\n                                <div className=\"card-block text-center text-white\">\r\n                                    <h6 className=\"f-w-600\">{auth.firstName} {auth.lastName}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-8\">\r\n                                <div className=\"card-block\">\r\n                                    <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">Information</h6>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <p className=\"m-b-10 f-w-600\">First Name</p>\r\n                                            <p className=\"text-muted f-w-400\" id=\"firstname\">{auth.firstName}</p>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <p className=\"m-b-10 f-w-600\">Last Name</p>\r\n                                            <Link to=\"/updatename\">\r\n                                                <img src=\"https://image.flaticon.com/icons/png/512/61/61456.png\" alt=\"\" width=\"12\" height=\"12\" className=\"editIcon editIconName\"/>\r\n                                            </Link>\r\n                                            <p className=\"text-muted f-w-400\" id=\"lastname\">{auth.lastName}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <p className=\"m-b-10 f-w-600\">Email</p>\r\n                                            <Link to=\"/updatemail\">\r\n                                                <img src=\"https://image.flaticon.com/icons/png/512/61/61456.png\" alt=\"\" width=\"12\" height=\"12\" className=\"editIcon\"/>\r\n                                            </Link>\r\n                                            <h6 className=\"text-muted f-w-400\">{auth.email}</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <p className=\"m-b-10 f-w-600\">User ID</p>\r\n                                            <h6 className=\"text-muted f-w-400\">{auth.uid}</h6>\r\n                                        </div>\r\n                                        <div>\r\n                                            \r\n                                        </div>\r\n                                            <img src={auth.image} alt=\"\" className=\"profile-image\"/>\r\n                                            <input type=\"file\" id=\"imageInput\" onChange={(e)=> setFile(e.target.files[0])}/>\r\n                                            <button className=\"btn btn-primary btn-block uploadImgBtn\" onClick={uploadPic}>Upload</button>\r\n                                        </div>\r\n                                        <Link to=\"/updatepassword\">\r\n                                            <button className=\"btn btn-primary btn-block editPassBtn\"> \r\n                                                Update Password\r\n                                            </button>\r\n                                        </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</Layout>\r\n        \r\n        \r\n    )\r\n}\r\nexport default ProfilePage;\r\n\r\n","import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport { updateUserPassword } from '../../actions';\r\nimport './updatepassword.css';\r\n\r\nconst UpdatePassword = () => {\r\n    const dispatch = useDispatch();\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n    const updatePassword=(e)=>{\r\n        e.preventDefault();\r\n        dispatch(updateUserPassword(currentPassword, newPassword));\r\n    }\r\n\r\n    return(\r\n        <Layout>\r\n            <div className=\"updatePasswordContainer\">\r\n                <form onSubmit={updatePassword}>\r\n                    <h3>Update Password</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Current Password</label>\r\n                        <input name=\"currentpassword\" value={currentPassword} onChange={(e) => setCurrentPassword(e.target.value)} type=\"password\" className=\"form-control\" placeholder=\"Current Password\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>New Password</label>\r\n                        <input name=\"newpassword\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} type=\"password\" className=\"form-control\" placeholder=\"New Password\" />\r\n                    </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                            Update Password\r\n                        </button> \r\n                </form>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword;","import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport { updateUserEmail } from '../../actions';\r\nimport './updateemail.css';\r\n\r\n\r\nconst UpdateEmail = () => {\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newEmail, setNewEmail] = useState(\"\");\r\n\r\n    const updateEmail=(e)=>{\r\n        e.preventDefault();\r\n        const pass = password;\r\n        const email = newEmail;\r\n        dispatch(updateUserEmail(pass,email));\r\n    }\r\n\r\n    return(\r\n        <Layout>\r\n            <form onSubmit={updateEmail}>\r\n                <div className=\"updateEmailContainer\">\r\n                    <h3>Update Email</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" className=\"form-control\" placeholder=\"New Email\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>New Email</label>\r\n                        <input name=\"newemail\" value={newEmail} onChange={(e) => setNewEmail(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"New Email\" />\r\n                    </div>\r\n                    <button  type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                        Update Email\r\n                    </button> \r\n                </div>\r\n            </form>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateEmail;","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport { updateDisplayName } from '../../actions'\r\nimport './updatename.css';\r\n\r\n\r\nconst UpdateName = () => {\r\n    const [firstname, setFirstName] = useState(\"\");\r\n    const [lastname, setLastName] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.auth);\r\n    \r\n\r\n    const updatename=(e)=>{\r\n        e.preventDefault();\r\n        dispatch(updateDisplayName(auth.uid, firstname, lastname));\r\n    }\r\n\r\n    return(\r\n        <Layout>\r\n            <div className=\"updateNameContainer\">\r\n                <form onSubmit={updatename}>\r\n                    <h3>Update Name</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>First Name</label>\r\n                        <input name=\"firstname\" value={firstname} onChange={(e) => setFirstName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"New First name\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Last Name</label>\r\n                        <input name=\"newname\" value={lastname} onChange={(e) => setLastName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"New Last name\" />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Update Name</button> \r\n                </form>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateName;","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport HomePage from './containers/HomePage/HomePage.js'\r\nimport LoginPage from './containers/LoginPage/LoginPage.js';\r\nimport RegisterPage from './containers/RegisterPage/RegisterPage.js';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport ProfilePage from './containers/ProfilePage/ProfilePage.js';\r\nimport UpdatePassword from './containers/UpdatePassword/UpdatePassword.js';\r\nimport UpdateEmail from './containers/UpdateEmail/UpdateEmail.js'\r\nimport UpdateName from './containers/UpdateName/UpdateName';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isLoggedInUser } from './actions';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() { \r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(!auth.authenticated){\r\n      dispatch(isLoggedInUser())\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {/* only logged in user can access this home route */}\r\n        <PrivateRoute path=\"/\" exact component={HomePage} />\r\n        <PrivateRoute path=\"/profile\" exact component={ProfilePage} />\r\n        <PrivateRoute path=\"/updatepassword\" exact component={UpdatePassword} />\r\n        <PrivateRoute path=\"/updatemail\" exact component={UpdateEmail} />\r\n        <PrivateRoute path=\"/updatename\" exact component={UpdateName} />\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/signup\" component={RegisterPage} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { authConstanst } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    authenticating: false,\r\n    authenticated: false,\r\n    image: '',\r\n    error: null\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case `${authConstanst.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated: false,\r\n                authenticating: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_REQUEST`:\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_SUCCESS`:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n\r\n\r\n    return state;\r\n}","import { userConstants } from \"../actions/constants\"\r\n\r\nconst intiState = {\r\n    users: [],\r\n    conversations: []\r\n}\r\n\r\nexport default (state = intiState, action) => {\r\n\r\n    switch(action.type){ // eslint-disable-next-line\r\n        case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n            break;\r\n        case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n            break;\r\n        case userConstants.GET_REALTIME_MESSAGES:\r\n            state = {\r\n                ...state,\r\n                conversations: action.payload.conversations\r\n            }\r\n            break;\r\n        case `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                conversations: []\r\n            }\r\n            break;\r\n    }\r\n\r\n\r\n    return state;\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from './auth.reducer';\r\nimport userReducer from './user.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport firebase from 'firebase';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/Store.js';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAeX-xcz7Lj9mH8U9Lr5K6snn-73XGkAPY\",\r\n  authDomain: \"react-chatapp-e12ff.firebaseapp.com\",\r\n  databaseURL: \"https://react-chatapp-e12ff-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"react-chatapp-e12ff\",\r\n  storageBucket: \"react-chatapp-e12ff.appspot.com\",\r\n  messagingSenderId: \"781804304637\",\r\n  appId: \"1:781804304637:web:5accdecd6a1d258c84a694\",\r\n  measurementId: \"G-Y8NJ4PN0M2\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nexport {\r\n  storage, firebase as default\r\n}"],"sourceRoot":""}